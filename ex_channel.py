"""
channel_scaling_experiment.py
This script runs numerical experiments for the MSGFEM (Multiscale Generalized Finite Element Method) on various problem configurations, specifically focusing on channel problems. 
It systematically varies the number of local domains (`nlocs`) and contrast values (`contrasts`) to evaluate the performance of the method, both with and without the "ring" option enabled. 
The results, including iteration counts, GFEM errors, and coarse space sizes, are saved to a timestamped `.npz` file for further analysis. 
The data generated by this script is used to produce Table 1 in the associated paper.
"""

import experiments_driver as ed

import ray
import numpy as np
# ray.init(num_cpus=1)  # uncomment if want to run serially
import helper
import datetime
import os as ops

# Generate a timestamp
timestamp = datetime.datetime.now().strftime("%Y%m%d_%H%M%S")

commit_hash = helper.get_commit_hash()

# Skyscraper experiment
k = 0
deg = 1
Ny = 4
ny = 2**8
ol = 2
os = 2
nlocs = np.arange(1, 11, 1)
rho = 0.0
problem_label = "channel" # other options : "source_dirichlet", "iid", "channel",  "skyscraper"
contrasts = np.array([1, 1000, 1e6])
# length = 1 # length of channels

iteration_numbers = np.zeros((len(nlocs), len(contrasts)))
gfem_errors = np.zeros((len(nlocs), len(contrasts)))
coarse_space_size = np.zeros((len(nlocs), len(contrasts)))

iteration_numbers_ring = np.zeros((len(nlocs), len(contrasts)))
gfem_errors_ring = np.zeros((len(nlocs), len(contrasts)))
coarse_space_size_ring = np.zeros((len(nlocs), len(contrasts)))

for nloc_id in range(len(nlocs)):
    for contrast_id in range(len(contrasts)):
        nloc = nlocs[nloc_id]
        contrast = contrasts[contrast_id]
        print(f"nloc: {nloc}, contrast: {contrast}")

        bool_ring = False
        
        iteration_numbers[nloc_id, contrast_id], gfem_errors[nloc_id, contrast_id], coarse_space_size[nloc_id, contrast_id] = ed.run_msgfem(deg, Ny, ny, ol, os, nloc, rho, problem_label, bool_ring, contrast)

        bool_ring = True

        iteration_numbers_ring[nloc_id, contrast_id], gfem_errors_ring[nloc_id, contrast_id], coarse_space_size_ring[nloc_id, contrast_id] = ed.run_msgfem(deg, Ny, ny, ol, os, nloc, rho, problem_label, bool_ring, contrast)

        # If directory does not exist, create it
        if not ops.path.exists("data_rings"):
            ops.makedirs("data_rings")

        np.savez("data_rings/" + problem_label + timestamp + ".npz",
                        deg=deg,
                        ny=ny,
                        Ny = Ny,
                        ol = ol,
                        os = os,
                        nlocs = nlocs,
                        iteration_numbers = iteration_numbers,
                        iteration_numbers_ring = iteration_numbers_ring,
                        gfem_errors = gfem_errors,
                        gfem_errors_ring = gfem_errors_ring,
                        rho = rho,
                        coarse_space_size = coarse_space_size,
                        coarse_space_size_ring = coarse_space_size_ring,
                        contrasts = contrasts,
                        commit_hash = commit_hash
                    )

ray.shutdown()

# Create plots and tables
helper.createTables(problem_label + timestamp + ".npz")



